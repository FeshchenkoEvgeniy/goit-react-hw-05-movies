{"version":3,"file":"static/js/219.62050185.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,6GAEPC,EAAAA,EAAAA,IAAA,UACdH,EADc,wCAC0BC,EAD1B,YAFO,cAEpBG,EAFoB,yBAKnBA,EAAKC,MALc,gCAO1BC,QAAQC,IAAR,MAP0B,yDAAH,qDAWdC,EAAY,mCAAG,WAAMC,GAAN,gGAELN,EAAAA,EAAAA,IAAA,UACdH,EADc,iCACmBC,EADnB,kBACoCQ,IAH/B,cAElBL,EAFkB,yBAKjBA,EAAKC,MALY,gCAOxBC,QAAQC,IAAR,MAPwB,yDAAH,sDAWZG,EAAgB,mCAAG,WAAMC,GAAN,gGAETR,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIW,EADJ,oBACkBV,IAHT,cAEtBG,EAFsB,yBAKrBA,EAAKC,MALgB,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBK,EAAe,mCAAG,WAAMD,GAAN,gGAERR,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIW,EADJ,4BAC0BV,IAHlB,cAErBG,EAFqB,yBAKpBA,EAAKC,MALe,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,sDAWfM,EAAe,mCAAG,WAAMF,GAAN,gGAERR,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIW,EADJ,4BAC0BV,IAHlB,cAErBG,EAFqB,yBAKpBA,EAAKC,MALe,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,qD,uIC/CfO,EAAWC,EAAAA,GAAAA,GAAH,yIAQRC,EAAeD,EAAAA,GAAAA,GAAH,kS,SC4BzB,EAjCa,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OANAE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBQ,GACbG,MAAK,SAAAC,GAAQ,OAAIL,EAAUK,EAASC,KAAvB,IACbC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,GACf,GAAE,CAACP,KAGF,8BACE,SAACN,EAAD,UACGI,EAAOU,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACV,UAACf,EAAD,YACE,gBACEgB,MAAO,CAAEC,QAAS,gBAClBC,IACEL,EAAY,0CAC2BA,GACnC,sCAENM,IAAI,QACJC,MAAM,WAER,wBAAKN,KACL,uCAAeC,OAZEpB,EADT,OAmBnB,C","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a9accf560553954898139d3fe730a4a1';\n\nexport const TrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const SearchMovies = async value => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetailsMovies = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  gap: 30px;\n  flex-wrap: wrap;\n  padding: 0px 0px 30px;\n`;\n\nexport const CastListItem = styled.li`\n  padding: 18px;\n  width: 150px;\n  justify-content: center;\n  text-align: center;\n  border-radius: 10px;\n  box-shadow: rgb(9 30 66 / 25%) 0px 4px 8px -2px,\n    rgb(9 30 66 / 8%) 0px 0px 0px 1px;\n  transition: transform 700ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n`;\n","import { getMovieCredits } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastListItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(response => setActors(response.cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <section>\n      <CastList>\n        {actors.map(({ id, profile_path, name, character }) => (\n          <CastListItem key={id}>\n            <img\n              style={{ display: 'inline-block' }}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : 'https://via.placeholder.com/100x150'\n              }\n              alt=\"movie\"\n              width=\"100px\"\n            />\n            <h2>{name}</h2>\n            <p>Character: {character}</p>\n          </CastListItem>\n        ))}\n      </CastList>\n    </section>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","TrendingMovies","axios","resp","data","console","log","SearchMovies","value","getDetailsMovies","id","getMovieCredits","getMovieReviews","CastList","styled","CastListItem","useState","actors","setActors","movieId","useParams","useEffect","then","response","cast","catch","error","map","profile_path","name","character","style","display","src","alt","width"],"sourceRoot":""}